---
name: Unit Tests

on: [pull_request, push]  # NOLINT

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-16.04, ubuntu-18.04, windows-latest]
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v1
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - uses: actions/cache@v1
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - uses: actions/cache@v1
        if: startsWith(runner.os, 'Windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools
          python -m pip install --upgrade wheel
          python -m pip install --upgrade coverage
          python -m pip install --upgrade mypy
          python -m pip install --upgrade statick
          python -m pip install --upgrade statick-md
          python -m pip install --upgrade tox
          python -m pip install --upgrade tox-gh-actions
          python -m pip install --upgrade virtualenv
          python -m pip install -r requirements.txt

      # Have to install newer version from non-apt source due to SSL library compatibility issues.
      - name: Install tools (Linux)
        if: matrix.os == 'ubuntu-18.04'
        run: |
          sudo apt install curl
          curl -sL https://deb.nodesource.com/setup_10.x -o nodesource_setup.sh
          sudo bash nodesource_setup.sh
          sudo apt install nodejs
          sudo npm install -g n
          sudo n stable
          sudo npm install -g markdownlint-cli@0.21.0
          rm nodesource_setup.sh

      # Black is only available on Python 3.6+, but we still want to test Python 3.5 since that is
      # default on Ubuntu 16.04. When Python 3.5 support is dropped we can add black to requirements.txt
      # and remove this extra stage.
      - name: Install black (Python 3.6+)
        if: matrix.python-version >= 3.6
        run: |
          python -m pip install --upgrade black

      - name: Test with black
        if: matrix.python-version >= 3.6
        run: >-
          black --check --diff
          --exclude tests/.*/*valid_package/*
          src tests

      - name: Tox
        run: |
          python -m tox

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-18.04'
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true

      - name: Statick Documentation
        if: matrix.os == 'ubuntu-18.04'
        run: |
          statick . --check --user-paths . --profile documentation.yaml

      - name: Self check
        if: matrix.os == 'ubuntu-18.04'
        run: |
          mkdir statick-output
          statick . --output-directory statick-output --check --profile self_check.yaml
